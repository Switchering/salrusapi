// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220405123145_IncomeIdentity")]
    partial class IncomeIdentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Entitites.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entitites.WBEntities.Income", b =>
                {
                    b.Property<int>("incomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("incomeId"));

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("dateClose")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("warehouseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("incomeId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("API.Entitites.WBEntities.IncomeDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("barcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("incomeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("lastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("nmId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("supplierArticle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("techSize")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.HasIndex("incomeId");

                    b.ToTable("IncomeDetails");
                });

            modelBuilder.Entity("API.Entitites.WBEntities.Order", b =>
                {
                    b.Property<decimal>("odid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("barcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("cancel_dt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("discountPercent")
                        .HasColumnType("integer");

                    b.Property<string>("gNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("incomeID")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("isCancel")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("lastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("nmId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("number")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("oblast")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<string>("sticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("supplierArticle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("techSize")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("warehouseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("odid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("API.Entitites.WBEntities.Sale", b =>
                {
                    b.Property<string>("saleID")
                        .HasColumnType("text");

                    b.Property<int>("IsStorno")
                        .HasColumnType("integer");

                    b.Property<string>("barcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("discountPercent")
                        .HasColumnType("integer");

                    b.Property<decimal>("finishedPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("forPay")
                        .HasColumnType("numeric");

                    b.Property<string>("gNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("incomeID")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("isRealization")
                        .HasColumnType("boolean");

                    b.Property<bool>("isSupply")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("lastChangeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("nmId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("oblastOkrugName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("odid")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("orderId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("priceWithDisc")
                        .HasColumnType("numeric");

                    b.Property<int>("promoCodeDiscount")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<string>("regionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("spp")
                        .HasColumnType("integer");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("supplierArticle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("techSize")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("warehouseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("saleID");

                    b.HasIndex("odid");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("API.Entitites.WBEntities.IncomeDetails", b =>
                {
                    b.HasOne("API.Entitites.WBEntities.Income", "Income")
                        .WithMany("IncomeDetails")
                        .HasForeignKey("incomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Income");
                });

            modelBuilder.Entity("API.Entitites.WBEntities.Sale", b =>
                {
                    b.HasOne("API.Entitites.WBEntities.Order", "Order")
                        .WithMany("Sales")
                        .HasForeignKey("odid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("API.Entitites.WBEntities.Income", b =>
                {
                    b.Navigation("IncomeDetails");
                });

            modelBuilder.Entity("API.Entitites.WBEntities.Order", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
